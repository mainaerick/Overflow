{"ast":null,"code":"import { canUseDOM as canUseDOMFlag } from 'exenv';\nexport var STATUS = {\n  FAILED: 'failed',\n  LOADED: 'loaded',\n  LOADING: 'loading',\n  PENDING: 'pending',\n  READY: 'ready',\n  UNSUPPORTED: 'unsupported'\n};\nexport function canUseDOM() {\n  return canUseDOMFlag;\n}\nexport function isSupportedEnvironment() {\n  return supportsInlineSVG() && typeof window !== 'undefined' && window !== null;\n}\nexport function supportsInlineSVG() {\n  /* istanbul ignore next */\n  if (!document) {\n    return false;\n  }\n  var div = document.createElement('div');\n  div.innerHTML = '<svg />';\n  return !!div.firstChild && div.firstChild.namespaceURI === 'http://www.w3.org/2000/svg';\n}\nexport function randomString(length) {\n  var letters = 'abcdefghijklmnopqrstuvwxyz';\n  var numbers = '1234567890';\n  var charset = \"\" + letters + letters.toUpperCase() + numbers;\n  var randomCharacter = function (character) {\n    return character[Math.floor(Math.random() * character.length)];\n  };\n  var R = '';\n  for (var i = 0; i < length; i++) {\n    R += randomCharacter(charset);\n  }\n  return R;\n}\n/**\n *  Remove properties from an object\n */\nexport function removeProperties(input) {\n  var filter = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    filter[_i - 1] = arguments[_i];\n  }\n  var output = {};\n  for (var key in input) {\n    /* istanbul ignore else */\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key)) {\n        output[key] = input[key];\n      }\n    }\n  }\n  return output;\n}","map":{"version":3,"names":["canUseDOM","canUseDOMFlag","STATUS","FAILED","LOADED","LOADING","PENDING","READY","UNSUPPORTED","isSupportedEnvironment","supportsInlineSVG","window","document","div","createElement","innerHTML","firstChild","namespaceURI","randomString","length","letters","numbers","charset","toUpperCase","randomCharacter","character","Math","floor","random","R","i","removeProperties","input","filter","_i","arguments","output","key","hasOwnProperty","call","includes"],"sources":["/Users/erickmaina/Desktop/Personal_Projects/Java/Overflow/frontend/overflow/node_modules/react-inlinesvg/src/helpers.ts"],"sourcesContent":["import { canUseDOM as canUseDOMFlag } from 'exenv';\n\nimport { PlainObject } from './types';\n\nexport const STATUS = {\n  FAILED: 'failed',\n  LOADED: 'loaded',\n  LOADING: 'loading',\n  PENDING: 'pending',\n  READY: 'ready',\n  UNSUPPORTED: 'unsupported',\n};\n\nexport function canUseDOM(): boolean {\n  return canUseDOMFlag;\n}\n\nexport function isSupportedEnvironment(): boolean {\n  return supportsInlineSVG() && typeof window !== 'undefined' && window !== null;\n}\n\nexport function supportsInlineSVG(): boolean {\n  /* istanbul ignore next */\n  if (!document) {\n    return false;\n  }\n\n  const div = document.createElement('div');\n  div.innerHTML = '<svg />';\n  return !!div.firstChild && div.firstChild.namespaceURI === 'http://www.w3.org/2000/svg';\n}\n\nexport function randomString(length: number): string {\n  const letters = 'abcdefghijklmnopqrstuvwxyz';\n  const numbers = '1234567890';\n  const charset = `${letters}${letters.toUpperCase()}${numbers}`;\n\n  const randomCharacter = (character: string) =>\n    character[Math.floor(Math.random() * character.length)];\n\n  let R = '';\n  for (let i = 0; i < length; i++) {\n    R += randomCharacter(charset);\n  }\n\n  return R;\n}\n\n/**\n *  Remove properties from an object\n */\nexport function removeProperties<T extends PlainObject, K extends keyof T>(\n  input: T,\n  ...filter: K[]\n): Omit<T, K> {\n  const output: any = {};\n\n  for (const key in input) {\n    /* istanbul ignore else */\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes((key as unknown) as K)) {\n        output[key] = input[key];\n      }\n    }\n  }\n\n  return output;\n}\n"],"mappings":"AAAA,SAASA,SAAS,IAAIC,aAAa,QAAQ,OAAO;AAIlD,OAAO,IAAMC,MAAM,GAAG;EACpBC,MAAM,EAAE,QAAQ;EAChBC,MAAM,EAAE,QAAQ;EAChBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClBC,KAAK,EAAE,OAAO;EACdC,WAAW,EAAE;CACd;AAED,OAAM,SAAUR,SAASA,CAAA;EACvB,OAAOC,aAAa;AACtB;AAEA,OAAM,SAAUQ,sBAAsBA,CAAA;EACpC,OAAOC,iBAAiB,EAAE,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,KAAK,IAAI;AAChF;AAEA,OAAM,SAAUD,iBAAiBA,CAAA;EAC/B;EACA,IAAI,CAACE,QAAQ,EAAE;IACb,OAAO,KAAK;;EAGd,IAAMC,GAAG,GAAGD,QAAQ,CAACE,aAAa,CAAC,KAAK,CAAC;EACzCD,GAAG,CAACE,SAAS,GAAG,SAAS;EACzB,OAAO,CAAC,CAACF,GAAG,CAACG,UAAU,IAAIH,GAAG,CAACG,UAAU,CAACC,YAAY,KAAK,4BAA4B;AACzF;AAEA,OAAM,SAAUC,YAAYA,CAACC,MAAc;EACzC,IAAMC,OAAO,GAAG,4BAA4B;EAC5C,IAAMC,OAAO,GAAG,YAAY;EAC5B,IAAMC,OAAO,GAAG,KAAGF,OAAO,GAAGA,OAAO,CAACG,WAAW,EAAE,GAAGF,OAAS;EAE9D,IAAMG,eAAe,GAAG,SAAAA,CAACC,SAAiB;IACxC,OAAAA,SAAS,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGH,SAAS,CAACN,MAAM,CAAC,CAAC;EAAvD,CAAuD;EAEzD,IAAIU,CAAC,GAAG,EAAE;EACV,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,MAAM,EAAEW,CAAC,EAAE,EAAE;IAC/BD,CAAC,IAAIL,eAAe,CAACF,OAAO,CAAC;;EAG/B,OAAOO,CAAC;AACV;AAEA;;;AAGA,OAAM,SAAUE,gBAAgBA,CAC9BC,KAAQ;EACR,IAAAC,MAAA;OAAA,IAAAC,EAAA,IAAc,EAAdA,EAAA,GAAAC,SAAA,CAAAhB,MAAc,EAAde,EAAA,EAAc;IAAdD,MAAA,CAAAC,EAAA,QAAAC,SAAA,CAAAD,EAAA;;EAEA,IAAME,MAAM,GAAQ,EAAE;EAEtB,KAAK,IAAMC,GAAG,IAAIL,KAAK,EAAE;IACvB;IACA,IAAI,EAAE,CAACM,cAAc,CAACC,IAAI,CAACP,KAAK,EAAEK,GAAG,CAAC,EAAE;MACtC,IAAI,CAACJ,MAAM,CAACO,QAAQ,CAAEH,GAAoB,CAAC,EAAE;QAC3CD,MAAM,CAACC,GAAG,CAAC,GAAGL,KAAK,CAACK,GAAG,CAAC;;;;EAK9B,OAAOD,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}