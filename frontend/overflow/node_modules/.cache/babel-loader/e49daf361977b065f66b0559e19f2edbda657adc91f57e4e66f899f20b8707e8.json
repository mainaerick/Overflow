{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"https://oak-be-zxxiqnr3eq-an.a.run.app/v1/user\";\nconst API_URL_Authorized = \"https://oak-be-zxxiqnr3eq-an.a.run.app/v1/account\";\nexport const GET_USER_BY_ACCESSTOKEN_URL = `${API_URL_Authorized}/about`;\nexport const LOGIN_URL = `${API_URL}/login`;\nexport const REGISTER_URL = `${API_URL}/register`;\nexport const REQUEST_PASSWORD_URL = `${API_URL}/forgot_password`;\n\n// Server should return AuthModel\nexport function login(email, password) {\n  return axios.post(LOGIN_URL, {\n    email,\n    password\n  });\n}\n\n// Server should return AuthModel\nexport function register(email, name, dob, gender, password) {\n  return axios.post(REGISTER_URL, {\n    email,\n    name: name,\n    dob: dob,\n    gender: gender,\n    password\n    // password_confirmation\n  });\n}\n\n// Server should return object => { result: boolean } (Is Email in DB)\nexport function requestPassword(email) {\n  return axios.post(REQUEST_PASSWORD_URL, {\n    email\n  });\n}\nexport function getUserByToken(token) {\n  return axios.get(GET_USER_BY_ACCESSTOKEN_URL, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`,\n      'Token': token\n    }\n  });\n}","map":{"version":3,"names":["axios","API_URL","API_URL_Authorized","GET_USER_BY_ACCESSTOKEN_URL","LOGIN_URL","REGISTER_URL","REQUEST_PASSWORD_URL","login","email","password","post","register","name","dob","gender","requestPassword","getUserByToken","token","get","headers"],"sources":["/Users/erickmaina/Desktop/Personal_Projects/Java/Overflow/frontend/overflow/src/features/auth/redux/AuthCRUD.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { UserModel } from \"../models/UserModel\";\r\n\r\nconst API_URL = \"https://oak-be-zxxiqnr3eq-an.a.run.app/v1/user\";\r\nconst API_URL_Authorized = \"https://oak-be-zxxiqnr3eq-an.a.run.app/v1/account\";\r\n\r\n\r\nexport const GET_USER_BY_ACCESSTOKEN_URL = `${API_URL_Authorized}/about`;\r\nexport const LOGIN_URL = `${API_URL}/login`;\r\nexport const REGISTER_URL = `${API_URL}/register`;\r\nexport const REQUEST_PASSWORD_URL = `${API_URL}/forgot_password`;\r\n\r\n// Server should return AuthModel\r\nexport function login(email: string, password: string) {\r\n  return axios.post(LOGIN_URL, {\r\n    email,\r\n    password,\r\n  });\r\n}\r\n\r\n// Server should return AuthModel\r\nexport function register(\r\n  email: string,\r\n  name: { firstname: string; middle: string; sur: string },\r\n  dob: string,\r\n  gender: string,\r\n  password: string\r\n) {\r\n  return axios.post(REGISTER_URL, {\r\n    email,\r\n    name: name,\r\n    dob: dob,\r\n    gender: gender,\r\n    password,\r\n    // password_confirmation\r\n  });\r\n}\r\n\r\n// Server should return object => { result: boolean } (Is Email in DB)\r\nexport function requestPassword(email: string) {\r\n  return axios.post<{ result: boolean }>(REQUEST_PASSWORD_URL, {\r\n    email,\r\n  });\r\n}\r\n\r\nexport function getUserByToken(token: string) {\r\n  return axios.get<UserModel>(GET_USER_BY_ACCESSTOKEN_URL, {\r\n    headers: {\r\n      \"Authorization\": `Bearer ${token}`,\r\n      'Token': token,  \r\n    },\r\n  });\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,gDAAgD;AAChE,MAAMC,kBAAkB,GAAG,mDAAmD;AAG9E,OAAO,MAAMC,2BAA2B,GAAI,GAAED,kBAAmB,QAAO;AACxE,OAAO,MAAME,SAAS,GAAI,GAAEH,OAAQ,QAAO;AAC3C,OAAO,MAAMI,YAAY,GAAI,GAAEJ,OAAQ,WAAU;AACjD,OAAO,MAAMK,oBAAoB,GAAI,GAAEL,OAAQ,kBAAiB;;AAEhE;AACA,OAAO,SAASM,KAAKA,CAACC,KAAa,EAAEC,QAAgB,EAAE;EACrD,OAAOT,KAAK,CAACU,IAAI,CAACN,SAAS,EAAE;IAC3BI,KAAK;IACLC;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASE,QAAQA,CACtBH,KAAa,EACbI,IAAwD,EACxDC,GAAW,EACXC,MAAc,EACdL,QAAgB,EAChB;EACA,OAAOT,KAAK,CAACU,IAAI,CAACL,YAAY,EAAE;IAC9BG,KAAK;IACLI,IAAI,EAAEA,IAAI;IACVC,GAAG,EAAEA,GAAG;IACRC,MAAM,EAAEA,MAAM;IACdL;IACA;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASM,eAAeA,CAACP,KAAa,EAAE;EAC7C,OAAOR,KAAK,CAACU,IAAI,CAAsBJ,oBAAoB,EAAE;IAC3DE;EACF,CAAC,CAAC;AACJ;AAEA,OAAO,SAASQ,cAAcA,CAACC,KAAa,EAAE;EAC5C,OAAOjB,KAAK,CAACkB,GAAG,CAAYf,2BAA2B,EAAE;IACvDgB,OAAO,EAAE;MACP,eAAe,EAAG,UAASF,KAAM,EAAC;MAClC,OAAO,EAAEA;IACX;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}