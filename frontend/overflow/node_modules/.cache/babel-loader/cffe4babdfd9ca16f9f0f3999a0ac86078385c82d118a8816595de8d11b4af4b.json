{"ast":null,"code":"import { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { put, takeLatest, select } from 'redux-saga/effects';\nimport { getUserByToken } from \"./AuthCRUD\";\nexport const actionTypes = {\n  Login: '[Login] Action',\n  Logout: '[Logout] Action',\n  Register: '[Register] Action',\n  UserRequested: '[Request User] Action',\n  UserLoaded: '[Load User] Auth API',\n  SetUser: '[Set User] Action'\n};\nconst initialAuthState = {\n  user: undefined,\n  accessToken: undefined\n};\nexport const reducer = persistReducer({\n  storage,\n  key: 'v100-demo1-auth',\n  whitelist: ['user', 'accessToken']\n}, (state = initialAuthState, action) => {\n  switch (action.type) {\n    case actionTypes.Login:\n      {\n        var _action$payload;\n        const accessToken = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.accessToken;\n        return {\n          accessToken,\n          user: undefined\n        };\n      }\n    case actionTypes.Register:\n      {\n        var _action$payload2;\n        const accessToken = (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.accessToken;\n        return {\n          accessToken,\n          user: undefined\n        };\n      }\n    case actionTypes.Logout:\n      {\n        return initialAuthState;\n      }\n    case actionTypes.UserLoaded:\n      {\n        var _action$payload3;\n        const user = (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.user;\n        return {\n          ...state,\n          user\n        };\n      }\n    case actionTypes.SetUser:\n      {\n        var _action$payload4;\n        const user = (_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.user;\n        return {\n          ...state,\n          user\n        };\n      }\n    default:\n      return state;\n  }\n});\nexport const actions = {\n  login: accessToken => ({\n    type: actionTypes.Login,\n    payload: {\n      accessToken\n    }\n  }),\n  register: accessToken => ({\n    type: actionTypes.Register,\n    payload: {\n      accessToken\n    }\n  }),\n  logout: () => ({\n    type: actionTypes.Logout\n  }),\n  requestUser: () => ({\n    type: actionTypes.UserRequested\n  }),\n  fulfillUser: user => ({\n    type: actionTypes.UserLoaded,\n    payload: {\n      user\n    }\n  }),\n  setUser: user => ({\n    type: actionTypes.SetUser,\n    payload: {\n      user\n    }\n  })\n};\nexport function* saga() {\n  yield takeLatest(actionTypes.Login, function* loginSaga() {\n    yield put(actions.requestUser());\n  });\n  yield takeLatest(actionTypes.Register, function* registerSaga() {\n    yield put(actions.requestUser());\n  });\n  yield takeLatest(actionTypes.UserRequested, function* userRequested() {\n    // @ts-ignore\n    const getToken = state => state.auth.accessToken;\n    // @ts-ignore\n    let token = yield select(getToken);\n    const {\n      data: user\n    } = yield getUserByToken(token);\n    yield put(actions.fulfillUser(user));\n  });\n}","map":{"version":3,"names":["persistReducer","storage","put","takeLatest","select","getUserByToken","actionTypes","Login","Logout","Register","UserRequested","UserLoaded","SetUser","initialAuthState","user","undefined","accessToken","reducer","key","whitelist","state","action","type","_action$payload","payload","_action$payload2","_action$payload3","_action$payload4","actions","login","register","logout","requestUser","fulfillUser","setUser","saga","loginSaga","registerSaga","userRequested","getToken","auth","token","data"],"sources":["/Users/erickmaina/Desktop/Personal_Projects/Java/Overflow/frontend/overflow/src/features/auth/redux/AuthRedux.ts"],"sourcesContent":["import {Action} from '@reduxjs/toolkit'\r\nimport {persistReducer} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {put, takeLatest, select} from 'redux-saga/effects'\r\nimport {UserModel} from '../models/UserModel'\r\nimport {getUserByToken} from \"./AuthCRUD\";\r\n\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  Login: '[Login] Action',\r\n  Logout: '[Logout] Action',\r\n  Register: '[Register] Action',\r\n  UserRequested: '[Request User] Action',\r\n  UserLoaded: '[Load User] Auth API',\r\n  SetUser: '[Set User] Action',\r\n}\r\n\r\nconst initialAuthState: IAuthState = {\r\n  user: undefined,\r\n  accessToken: undefined,\r\n}\r\n\r\nexport interface IAuthState {\r\n  user?: UserModel\r\n  accessToken?: string\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  {storage, key: 'v100-demo1-auth', whitelist: ['user', 'accessToken']},\r\n  (state: IAuthState = initialAuthState, action: ActionWithPayload<IAuthState>) => {\r\n    switch (action.type) {\r\n      case actionTypes.Login: {\r\n        const accessToken = action.payload?.accessToken\r\n        return {accessToken, user: undefined}\r\n      }\r\n\r\n      case actionTypes.Register: {\r\n        const accessToken = action.payload?.accessToken\r\n        return {accessToken, user: undefined}\r\n      }\r\n\r\n      case actionTypes.Logout: {\r\n        return initialAuthState\r\n      }\r\n\r\n      case actionTypes.UserLoaded: {\r\n        const user = action.payload?.user\r\n        return {...state, user}\r\n      }\r\n\r\n      case actionTypes.SetUser: {\r\n        const user = action.payload?.user\r\n        return {...state, user}\r\n      }\r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  login: (accessToken: string) => ({type: actionTypes.Login, payload: {accessToken}}),\r\n  register: (accessToken: string) => ({\r\n    type: actionTypes.Register,\r\n    payload: {accessToken},\r\n  }),\r\n  logout: () => ({type: actionTypes.Logout}),\r\n  requestUser: () => ({\r\n    type: actionTypes.UserRequested,\r\n  }),\r\n  fulfillUser: (user: UserModel) => ({type: actionTypes.UserLoaded, payload: {user}}),\r\n  setUser: (user: UserModel) => ({type: actionTypes.SetUser, payload: {user}}),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.Login, function* loginSaga() {\r\n    yield put(actions.requestUser())\r\n  })\r\n\r\n  yield takeLatest(actionTypes.Register, function* registerSaga() {\r\n    yield put(actions.requestUser())\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UserRequested, function* userRequested() {\r\n    // @ts-ignore\r\n    const getToken = (state) => state.auth.accessToken;\r\n    // @ts-ignore\r\n    let token = yield select(getToken)\r\n    const {data: user} = yield getUserByToken(token)\r\n    yield put(actions.fulfillUser(user))\r\n  })\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}