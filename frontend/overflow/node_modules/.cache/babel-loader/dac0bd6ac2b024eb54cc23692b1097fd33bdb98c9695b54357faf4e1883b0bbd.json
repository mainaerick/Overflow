{"ast":null,"code":"import axios from \"axios\";\nimport { APIURL } from \"../../../setup/config\";\nconst API_URL = APIURL;\n// const API_URL_Authorized = \"https://oak-be-zxxiqnr3eq-an.a.run.app/v1/account\";\n\nexport const GET_USER_BY_ACCESSTOKEN_URL = `${APIURL}/users/me`;\nexport const LOGIN_URL = `${API_URL}/users/signin`;\nexport const REGISTER_URL = `${API_URL}/users/signup`;\nexport const REQUEST_PASSWORD_URL = `${API_URL}/forgot_password`;\n\n// Server should return AuthModel\nexport function login(username, password) {\n  return axios.post(LOGIN_URL, {\n    username,\n    password\n  });\n}\n\n// Server should return AuthModel\nexport function register(username, email, password, appUserRoles) {\n  return axios.post(REGISTER_URL, {\n    email,\n    username: username,\n    appUserRoles: appUserRoles,\n    password: password\n    // password_confirmation\n  });\n}\n\n// Server should return object => { result: boolean } (Is Email in DB)\nexport function requestPassword(email) {\n  return axios.post(REQUEST_PASSWORD_URL, {\n    email\n  });\n}\nexport function getUserByToken(token) {\n  return axios.get(GET_USER_BY_ACCESSTOKEN_URL, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`,\n      'Token': token\n    }\n  });\n}","map":{"version":3,"names":["axios","APIURL","API_URL","GET_USER_BY_ACCESSTOKEN_URL","LOGIN_URL","REGISTER_URL","REQUEST_PASSWORD_URL","login","username","password","post","register","email","appUserRoles","requestPassword","getUserByToken","token","get","headers"],"sources":["/Users/erickmaina/Desktop/Personal_Projects/Java/Overflow/frontend/overflow/src/features/auth/redux/AuthCRUD.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { UserModel } from \"../models/UserModel\";\r\nimport { APIURL } from \"../../../setup/config\";\r\n\r\nconst API_URL = APIURL;\r\n// const API_URL_Authorized = \"https://oak-be-zxxiqnr3eq-an.a.run.app/v1/account\";\r\n\r\n\r\nexport const GET_USER_BY_ACCESSTOKEN_URL = `${APIURL}/users/me`;\r\nexport const LOGIN_URL = `${API_URL}/users/signin`;\r\nexport const REGISTER_URL = `${API_URL}/users/signup`;\r\nexport const REQUEST_PASSWORD_URL = `${API_URL}/forgot_password`;\r\n\r\n// Server should return AuthModel\r\nexport function login(username: string, password: string) {\r\n  return axios.post(LOGIN_URL, {\r\n    username,\r\n    password,\r\n  });\r\n}\r\n\r\n// Server should return AuthModel\r\nexport function register(\r\n  username: string,\r\n  email: string,\r\n  password: string,\r\n  appUserRoles: [string]\r\n) {\r\n  return axios.post(REGISTER_URL, {\r\n    email,\r\n    username: username,\r\n    appUserRoles: appUserRoles,\r\n    password:password,\r\n    // password_confirmation\r\n  });\r\n}\r\n\r\n// Server should return object => { result: boolean } (Is Email in DB)\r\nexport function requestPassword(email: string) {\r\n  return axios.post<{ result: boolean }>(REQUEST_PASSWORD_URL, {\r\n    email,\r\n  });\r\n}\r\n\r\nexport function getUserByToken(token: string) {\r\n  return axios.get<UserModel>(GET_USER_BY_ACCESSTOKEN_URL, {\r\n    headers: {\r\n      \"Authorization\": `Bearer ${token}`,\r\n      'Token': token,  \r\n    },\r\n  });\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,MAAM,QAAQ,uBAAuB;AAE9C,MAAMC,OAAO,GAAGD,MAAM;AACtB;;AAGA,OAAO,MAAME,2BAA2B,GAAI,GAAEF,MAAO,WAAU;AAC/D,OAAO,MAAMG,SAAS,GAAI,GAAEF,OAAQ,eAAc;AAClD,OAAO,MAAMG,YAAY,GAAI,GAAEH,OAAQ,eAAc;AACrD,OAAO,MAAMI,oBAAoB,GAAI,GAAEJ,OAAQ,kBAAiB;;AAEhE;AACA,OAAO,SAASK,KAAKA,CAACC,QAAgB,EAAEC,QAAgB,EAAE;EACxD,OAAOT,KAAK,CAACU,IAAI,CAACN,SAAS,EAAE;IAC3BI,QAAQ;IACRC;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASE,QAAQA,CACtBH,QAAgB,EAChBI,KAAa,EACbH,QAAgB,EAChBI,YAAsB,EACtB;EACA,OAAOb,KAAK,CAACU,IAAI,CAACL,YAAY,EAAE;IAC9BO,KAAK;IACLJ,QAAQ,EAAEA,QAAQ;IAClBK,YAAY,EAAEA,YAAY;IAC1BJ,QAAQ,EAACA;IACT;EACF,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,SAASK,eAAeA,CAACF,KAAa,EAAE;EAC7C,OAAOZ,KAAK,CAACU,IAAI,CAAsBJ,oBAAoB,EAAE;IAC3DM;EACF,CAAC,CAAC;AACJ;AAEA,OAAO,SAASG,cAAcA,CAACC,KAAa,EAAE;EAC5C,OAAOhB,KAAK,CAACiB,GAAG,CAAYd,2BAA2B,EAAE;IACvDe,OAAO,EAAE;MACP,eAAe,EAAG,UAASF,KAAM,EAAC;MAClC,OAAO,EAAEA;IACX;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}